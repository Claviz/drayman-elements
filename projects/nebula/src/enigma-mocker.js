/*
* @nebula.js/enigma-mocker v2.3.1
* Copyright (c) 2022 QlikTech International AB
* Released under the MIT license.
*/

!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).enigmaMocker = t() }(this, (function () { "use strict"; function e() { return { getObjectApi: () => Promise.resolve({ id: "sessapi - ".concat((Math.random() + 1).toString(36).substring(2)) }) } } function t(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) { var r = Object.getOwnPropertySymbols(e); t && (r = r.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable }))), n.push.apply(n, r) } return n } function n(e) { for (var n = 1; n < arguments.length; n++) { var o = null != arguments[n] ? arguments[n] : {}; n % 2 ? t(Object(o), !0).forEach((function (t) { r(e, t, o[t]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(o)) : t(Object(o)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(o, t)) })) } return e } function r(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function o(e, t) { if (null == e) return {}; var n, r, o = function (e, t) { if (null == e) return {}; var n, r, o = {}, i = Object.keys(e); for (r = 0; r < i.length; r++)n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]); return o }(e, t); if (Object.getOwnPropertySymbols) { var i = Object.getOwnPropertySymbols(e); for (r = 0; r < i.length; r++)n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]) } return o } function i() { return e => Promise.resolve(n({ on: () => { }, once: () => { }, getLayout: () => Promise.resolve({}), id: e && e.qInfo && e.qInfo.qId ? e.qInfo.qId : "sel - ".concat((Math.random() + 1).toString(36).substring(2)) }, e)) } const c = function (e) { let { args: t = [], defaultValue: n } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; return "function" == typeof e ? e(...t) : void 0 !== e ? e : n }, s = function (e) { let { defaultValue: t, async: n = !0 } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; return function () { for (var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i]; const s = c(e, { defaultValue: t, args: o }); return n ? Promise.resolve(s) : s } }; async function u(e, t) { const n = e.map(t); return e[(await Promise.all(n)).findIndex(e => e)] } const a = ["id", "session"], f = ["addListener", "emit", "listeners", "on", "once", "removeAllListeners", "removeListener", "setMaxListerners"]; function l(e) { return !f.includes(e) } function d(e) { const { id: t, session: r } = e, i = o(e, a); return n({ id: c(t, { defaultValue: "object - ".concat((Math.random() + 1).toString(36).substring(2)) }), session: c(r, { defaultValue: !0 }), on: () => { }, once: () => { } }, Object.entries(i).reduce((e, t) => { let [r, o] = t; return n(n({}, e), {}, { [r]: s(o, { async: l(r) }) }) }, {})) } function p(e) { if (!e.getLayout) throw new Error('Generic object is missing "getLayout"'); const t = c(e.getLayout); if (!t.qInfo || !t.qInfo.qId) throw new Error('Generic object is missing "qId" for path "getLayout().qInfo.qId"') } function y() { let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; e.forEach(p); const t = e.map(d); return async e => { const n = u(t, async t => (await t.getLayout()).qInfo.qId === e); return Promise.resolve(n) } } function b() { return () => Promise.resolve({ id: "app-layout" }) } return { fromGenericObjects: t => { if (!Array.isArray(t) || 0 === t.length) throw new Error('No "genericObjects" specified'); const n = new e, r = new i, o = new y(t), c = new b, s = { id: "app - ".concat((Math.random() + 1).toString(36).substring(2)), session: n, createSessionObject: r, getObject: o, getAppLayout: c }; return Promise.resolve(s) } } }));
//# sourceMappingURL=enigma-mocker.js.map
